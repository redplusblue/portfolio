:root {
  --card-height: 40vw;
  --card-margin: 10vw;
  --card-top-offset: 1em;
  --numcards: 3;
  --outline-width: 0px;
}

/* Import Fonts */
@font-face {
  font-family: "Nunito";
  src: url(assets/Fonts/Nunito-Medium.ttf);
}

#cards {
  padding-bottom: calc(
    var(--numcards) * var(--card-top-offset)
  ); /* Make place at bottom, as items will slide to that position*/
  margin-bottom: var(
    --card-margin
  ); /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
}

#card_1 {
  --index: 1;
  /* Create View Timeline */
  view-timeline-name: --revealing-image;
  view-timeline-axis: block;
  /* Attach animation, linked to the  View Timeline */
  animation: linear reveal both;
  animation-timeline: --revealing-image;
  backdrop-filter: blur(10px);

  /* Tweak range when effect should run*/
  animation-range: entry 5% cover 15%;
}

#card_2 {
  --index: 2;
}

#card_3 {
  --index: 3;
}

.card {
  position: sticky;
  top: 2.5rem;
  padding-top: calc(var(--index) * var(--card-top-offset));
}

@supports (animation-timeline: works) {
  .card {
    --index0: calc(var(--index) - 1); /* 0-based index */
    --reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
    --reverse-index0: calc(
      var(--reverse-index) - 1
    ); /* 0-based reverse index */
  }

  .card__content {
    transform-origin: 50% 0%;
    will-change: transform;

    --duration: calc(var(--reverse-index0) * 1s);
    --delay: calc(var(--index0) * 1s);

    animation: var(--duration) linear scale var(--delay) forwards;
    animation-timeline: cards-element-scrolls-in-body;
  }

  @keyframes scale {
    to {
      transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
    }
  }
}

/** DEBUG **/

#debug {
  position: fixed;
  top: 1em;
  left: 1em;
}
#debug::after {
  content: " Show Debug";
  margin-left: 1.5em;
  color: white;
  white-space: nowrap;
}

#debug:checked ~ main {
  --outline-width: 1px;
}

/** PAGE STYLING **/

* {
  /* Poor Man's Reset :D */
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  color: rgb(255, 255, 255);
  text-align: center;
  font-size: calc(1em + 0.5vw);
}

header,
main {
  width: 80vw;
  margin: 0 auto;
}

header {
  height: 100vh;
  display: grid;
  place-items: center;
}

#cards {
  list-style: none;
  outline: calc(var(--outline-width) * 10) solid blue;

  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--numcards), var(--card-height));
  gap: var(--card-margin);
}

.card {
  outline: var(--outline-width) solid hotpink;
}

@keyframes reveal {
  from {
    opacity: 0;
    clip-path: inset(45% 20% 45% 20%);
  }
  to {
    opacity: 1;
    clip-path: inset(0% 0% 0% 0%);
  }
}

#card_1 > .card__content,
#card_3 > .card__content {
  box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
  /* background: rgb(255, 255, 255); */
  backdrop-filter: blur(15px);
  color: white;
  border-radius: 1em;
  overflow: hidden;
  display: grid;
  grid-template-areas: "text img";
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  min-height: 80vh;
  align-items: stretch;
  outline: var(--outline-width) solid lime;
}

#card_2 > .card__content {
  backdrop-filter: blur(15px);
  background-color: rgba(0, 0, 0, 0.137);
  border-radius: 1em;
  display: flex;
  flex-direction: column;
  min-height: 80vh;
  justify-content: center;
  align-items: center;
}

#card_1 > .card__content > div,
#card_3 > .card__content > div {
  grid-area: text;
  width: 80%;
  place-self: center;
  text-align: left;
  grid-auto-flow: row;
  display: grid;
  gap: 1em;
  place-items: start;
}

#card_2 > .card__content > div {
  grid-area: text;
  place-self: center;
  text-align: left;
  grid-auto-flow: row;
  display: grid;
  gap: 1em;
  place-items: start;
}

.card__content > figure {
  grid-area: img;
  overflow: hidden;
  transition: transform 0.5s ease-in-out;
}

.card__content > figure:hover {
  transform: scale(1.1);
}

.card__content > figure > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

h1 {
  font-weight: 300;
  font-size: 3.5em;
}

h2 {
  font-weight: 300;
  font-size: 2.5em;
}

p {
  font-family: sans-serif;
  font-weight: 300;
  line-height: 1.42;
}

.btn {
  background: rgb(188 87 36);
  color: rgb(255 255 255);
  text-decoration: none;
  display: inline-block;
  padding: 0.5em;
  border-radius: 0.25em;
}

aside {
  width: 50vw;
  margin: 0 auto;
  text-align: left;
}

aside p {
  margin-bottom: 1em;
}

/* Cards button */
.ui-btn {
  --btn-default-bg: #010314;
  --btn-padding: 15px 20px;
  --btn-hover-bg: rgb(51, 51, 51);
  --btn-transition: 0.3s;
  --btn-letter-spacing: 0.1rem;
  --btn-animation-duration: 1.2s;
  --btn-shadow-color: rgba(0, 0, 0, 0.137);
  --btn-shadow: 0 2px 10px 0 var(--btn-shadow-color);
  --hover-btn-color: #7241ff;
  --default-btn-color: #fff;
  --font-size: 16px;
  /* ðŸ‘† this field should not be empty */
  --font-weight: 600;
  --font-family: Menlo, Roboto Mono, monospace;
}

/* button settings ðŸ‘† */

.ui-btn {
  box-sizing: border-box;
  padding: var(--btn-padding);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--default-btn-color);
  font: var(--font-weight) var(--font-size) var(--font-family);
  background: var(--btn-default-bg);
  cursor: pointer;
  transition: var(--btn-transition);
  overflow: hidden;
  box-shadow: var(--btn-shadow);
  border-radius: 10px;
  border: 2px solid #2a2b3a;
}

.ui-btn span {
  letter-spacing: var(--btn-letter-spacing);
  transition: var(--btn-transition);
  box-sizing: border-box;
  position: relative;
  background: inherit;
}

.ui-btn span::before {
  box-sizing: border-box;
  position: absolute;
  content: "";
  background: inherit;
}

.ui-btn:hover,
.ui-btn:focus {
  background: var(--btn-default-bg);
  box-shadow: 0px 0px 10px 0px rgba(119, 68, 255, 0.7);
  border: 2px solid #7241ff;
}

.ui-btn:hover span,
.ui-btn:focus span {
  color: var(--hover-btn-color);
}

.ui-btn:hover span::before,
.ui-btn:focus span::before {
  animation: chitchat linear both var(--btn-animation-duration);
}

@keyframes chitchat {
  0% {
    content: "#";
  }

  5% {
    content: ".";
  }

  10% {
    content: "^{";
  }

  15% {
    content: "-!";
  }

  20% {
    content: "#$_";
  }

  25% {
    content: "â„–:0";
  }

  30% {
    content: "#{+.";}35%{content: "@}-?";
  }

  40% {
    content: "?{4@%";
  }

  45% {
    content: "=.,^!";
  }

  50% {
    content: "?2@%";
  }

  55% {
    content: "\;1}]";
  }

  60% {
    content: "?{%:%";
    right: 0;
  }

  65% {
    content: "|{f[4";
    right: 0;
  }

  70% {
    content: "{4%0%";
    right: 0;
  }

  75% {
    content: "'1_0<";
    right: 0;
  }

  80% {
    content: "{0%";
    right: 0;
  }

  85% {
    content: "]>'";
    right: 0;
  }

  90% {
    content: "4";
    right: 0;
  }

  95% {
    content: "2";
    right: 0;
  }

  100% {
    content: "";
    right: 0;
  }
}

/* Variations of the word samir using different ASCII symbols */
@keyframes samir {
  0% {
    content: "Samir";
  }
  14% {
    content: "$amir";
  }
  28% {
    content: "$@mir";
  }
  42% {
    content: "$@É±ir";
  }
  56% {
    content: "$@É±!r";
  }
  70% {
    content: "$@É±!Ð¯";
  }
  84% {
    content: "who?";
  }
  98% {
    content: "Samir";
  }
}

/* Smooth transition to expanded state */
.ui-text.show {
  opacity: 1;
  max-height: 1000px; /* Adjust to your desired maximum height */
  overflow: visible;
}

.ui-text {
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out;
}

.about-info {
}

.about-info > h2 > span::before {
  content: "Samir";
  color: #7241ff;
  animation: samir linear 8s infinite;
  transition: all 0.2s ease-in-out;
}

.about-info > h2 > span:hover::before {
  color: #7241ff;
  animation: none;
}

.about-info > p {
  font-size: 1.2em;
  font-family: "Nunito";
}

.about-info > ul {
  padding: 0;
  margin: 0;
}

.decorated {
  color: #00ffcc;
}

table {
  background: #012b39;
  border-radius: 1em;
  border-collapse: collapse;
}
th {
  border-bottom: 1px solid #364043;
  color: #e2b842;
  font-size: 0.85em;
  font-weight: 600;
  padding: 0.5em 1em;
  text-align: left;
}
td {
  color: #fff;
  font-weight: 400;
  padding: 0.65em 1em;
  aspect-ratio: 1;
}
.disabled td {
  color: #4f5f64;
}
tbody tr {
  transition: background 0.25s ease;
}
tbody td:hover {
  background: #014055;
}
